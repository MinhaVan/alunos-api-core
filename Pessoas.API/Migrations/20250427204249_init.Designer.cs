// <auto-generated />
using System;
using Pessoas.Core.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Pessoas.API.Migrations
{
    [DbContext(typeof(APIContext))]
    [Migration("20250427204249_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Aluno.Core.Domain.Models.AjusteAlunoRota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlunoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("NovoEnderecoDestinoId")
                        .HasColumnType("integer");

                    b.Property<int?>("NovoEnderecoPartidaId")
                        .HasColumnType("integer");

                    b.Property<int?>("NovoEnderecoRetornoId")
                        .HasColumnType("integer");

                    b.Property<int>("RotaId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ajusteAlunoRota", (string)null);
                });

            modelBuilder.Entity("Aluno.Core.Domain.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .HasColumnType("text");

                    b.Property<string>("Contato")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer");

                    b.Property<int>("EnderecoDestinoId")
                        .HasColumnType("integer");

                    b.Property<int>("EnderecoPartidaId")
                        .HasColumnType("integer");

                    b.Property<int?>("EnderecoRetornoId")
                        .HasColumnType("integer");

                    b.Property<string>("PrimeiroNome")
                        .HasColumnType("text");

                    b.Property<int>("ResponsavelId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("UltimoNome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("alunos", (string)null);
                });

            modelBuilder.Entity("Aluno.Core.Domain.Models.AlunoRota", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("integer");

                    b.Property<int>("RotaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("AlunoId", "RotaId");

                    b.ToTable("alunoRota", (string)null);
                });

            modelBuilder.Entity("Aluno.Core.Domain.Models.AlunoRota", b =>
                {
                    b.HasOne("Aluno.Core.Domain.Models.Aluno", "Aluno")
                        .WithMany("AlunoRotas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("Aluno.Core.Domain.Models.Aluno", b =>
                {
                    b.Navigation("AlunoRotas");
                });
#pragma warning restore 612, 618
        }
    }
}
